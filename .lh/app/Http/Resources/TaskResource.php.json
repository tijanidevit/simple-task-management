{
    "sourceFile": "app/Http/Resources/TaskResource.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1695211359334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695211968786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n      */\n     public function toArray(Request $request): array\n     {\n         return [\n-            'projectId' => $this->id,\n+            'taskId' => $this->id,\n+            'projectId' => $this->project_id,\n             'title' => $this->title,\n             'description' => $this->description,\n             'startTime' => $this->start_time,\n             'endTime' => $this->end_time,\n"
                },
                {
                    "date": 1695211979654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n             'startTime' => $this->start_time,\n             'endTime' => $this->end_time,\n             'status' => $this->status,\n             'project' => new ProjectResource($this->whenLoaded('project')),\n-            'notes' => TaskResource::collection($this->whenLoaded('notes')),\n+            'notes' => TaskNoteResource::collection($this->whenLoaded('notes')),\n         ];\n     }\n }\n"
                }
            ],
            "date": 1695211359334,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass TaskResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @return array<string, mixed>\n     */\n    public function toArray(Request $request): array\n    {\n        return [\n            'projectId' => $this->id,\n            'title' => $this->title,\n            'description' => $this->description,\n            'startTime' => $this->start_time,\n            'endTime' => $this->end_time,\n            'status' => $this->status,\n            'project' => new ProjectResource($this->whenLoaded('project')),\n            'notes' => TaskResource::collection($this->whenLoaded('notes')),\n        ];\n    }\n}\n"
        }
    ]
}